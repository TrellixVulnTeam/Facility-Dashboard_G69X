{"ast":null,"code":"export var convertDateToString = function convertDateToString(expdate) {\n  var date = new Date(expdate);\n  var expdateString = date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n  return expdateString;\n};\nexport var convertDateToMMYYYY = function convertDateToMMYYYY(expdate) {\n  var date = new Date(expdate);\n  var expdateString = date.getMonth() + 1 + \"/\" + date.getFullYear();\n  return expdateString;\n};\nexport var convertSqftToString = function convertSqftToString(size) {\n  if (size !== undefined) {\n    var size2 = size.toLocaleString(\"en-US\");\n    return size2;\n  }\n};\nexport var determineBadgeColor = function determineBadgeColor(projectstage) {\n  var badgeColor = \"blue\";\n\n  switch (projectstage) {\n    case \"Negotiation\":\n      badgeColor = \"green\";\n      break;\n\n    case \"Waiting\":\n      badgeColor = \"pink\";\n      break;\n\n    case \"On Hold\":\n      badgeColor = \"red\";\n      break;\n\n    case \"Closed\":\n      badgeColor = \"red\";\n      break;\n\n    default:\n      badgeColor = \"blue\";\n  }\n\n  return badgeColor;\n};\nexport var getStreetAddress = function getStreetAddress(address) {\n  var firstComma = address.indexOf(\",\");\n  var streetAddress = address.substr(0, firstComma);\n  return streetAddress;\n};\nexport var getCityStateZip = function getCityStateZip(address) {\n  var firstComma = address.indexOf(\",\");\n  var cityStateZip = address.substr(firstComma + 2, address.length);\n  return cityStateZip;\n};\nexport var preventScrollOnBody = function preventScrollOnBody(preventOrAllow) {\n  if (preventOrAllow === \"prevent\") {\n    document.body.classList.add(\"preventScroll\");\n  } else {\n    document.body.classList.remove(\"preventScroll\");\n  }\n};","map":{"version":3,"sources":["/Users/tylertierney/Documents/GitHub/Facility-Dashboard/src/HelperFunctions.js"],"names":["convertDateToString","expdate","date","Date","expdateString","getMonth","getDate","getFullYear","convertDateToMMYYYY","convertSqftToString","size","undefined","size2","toLocaleString","determineBadgeColor","projectstage","badgeColor","getStreetAddress","address","firstComma","indexOf","streetAddress","substr","getCityStateZip","cityStateZip","length","preventScrollOnBody","preventOrAllow","document","body","classList","add","remove"],"mappings":"AAAA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAa;AAC9C,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAT,CAAX;AACA,MAAIG,aAAa,GACfF,IAAI,CAACG,QAAL,KAAkB,CAAlB,GAAsB,GAAtB,GAA4BH,IAAI,CAACI,OAAL,EAA5B,GAA6C,GAA7C,GAAmDJ,IAAI,CAACK,WAAL,EADrD;AAEA,SAAOH,aAAP;AACD,CALM;AAOP,OAAO,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACP,OAAD,EAAa;AAC9C,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAT,CAAX;AACA,MAAIG,aAAa,GAAGF,IAAI,CAACG,QAAL,KAAkB,CAAlB,GAAsB,GAAtB,GAA4BH,IAAI,CAACK,WAAL,EAAhD;AACA,SAAOH,aAAP;AACD,CAJM;AAMP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAU;AAC3C,MAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtB,QAAMC,KAAK,GAAGF,IAAI,CAACG,cAAL,CAAoB,OAApB,CAAd;AACA,WAAOD,KAAP;AACD;AACF,CALM;AAOP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,YAAD,EAAkB;AACnD,MAAIC,UAAU,GAAG,MAAjB;;AACA,UAAQD,YAAR;AACE,SAAK,aAAL;AACEC,MAAAA,UAAU,GAAG,OAAb;AACA;;AACF,SAAK,SAAL;AACEA,MAAAA,UAAU,GAAG,MAAb;AACA;;AACF,SAAK,SAAL;AACEA,MAAAA,UAAU,GAAG,KAAb;AACA;;AACF,SAAK,QAAL;AACEA,MAAAA,UAAU,GAAG,KAAb;AACA;;AACF;AACEA,MAAAA,UAAU,GAAG,MAAb;AAdJ;;AAiBA,SAAOA,UAAP;AACD,CApBM;AAsBP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAa;AAC3C,MAAIC,UAAU,GAAGD,OAAO,CAACE,OAAR,CAAgB,GAAhB,CAAjB;AACA,MAAIC,aAAa,GAAGH,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkBH,UAAlB,CAApB;AACA,SAAOE,aAAP;AACD,CAJM;AAMP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACL,OAAD,EAAa;AAC1C,MAAIC,UAAU,GAAGD,OAAO,CAACE,OAAR,CAAgB,GAAhB,CAAjB;AACA,MAAII,YAAY,GAAGN,OAAO,CAACI,MAAR,CAAeH,UAAU,GAAG,CAA5B,EAA+BD,OAAO,CAACO,MAAvC,CAAnB;AACA,SAAOD,YAAP;AACD,CAJM;AAMP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,cAAD,EAAoB;AACrD,MAAIA,cAAc,KAAK,SAAvB,EAAkC;AAChCC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;AACD,GAFD,MAEO;AACLH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,eAA/B;AACD;AACF,CANM","sourcesContent":["export const convertDateToString = (expdate) => {\n  let date = new Date(expdate);\n  let expdateString =\n    date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n  return expdateString;\n};\n\nexport const convertDateToMMYYYY = (expdate) => {\n  let date = new Date(expdate);\n  let expdateString = date.getMonth() + 1 + \"/\" + date.getFullYear();\n  return expdateString;\n};\n\nexport const convertSqftToString = (size) => {\n  if (size !== undefined) {\n    const size2 = size.toLocaleString(\"en-US\");\n    return size2;\n  }\n};\n\nexport const determineBadgeColor = (projectstage) => {\n  let badgeColor = \"blue\";\n  switch (projectstage) {\n    case \"Negotiation\":\n      badgeColor = \"green\";\n      break;\n    case \"Waiting\":\n      badgeColor = \"pink\";\n      break;\n    case \"On Hold\":\n      badgeColor = \"red\";\n      break;\n    case \"Closed\":\n      badgeColor = \"red\";\n      break;\n    default:\n      badgeColor = \"blue\";\n  }\n\n  return badgeColor;\n};\n\nexport const getStreetAddress = (address) => {\n  let firstComma = address.indexOf(\",\");\n  let streetAddress = address.substr(0, firstComma);\n  return streetAddress;\n};\n\nexport const getCityStateZip = (address) => {\n  let firstComma = address.indexOf(\",\");\n  let cityStateZip = address.substr(firstComma + 2, address.length);\n  return cityStateZip;\n};\n\nexport const preventScrollOnBody = (preventOrAllow) => {\n  if (preventOrAllow === \"prevent\") {\n    document.body.classList.add(\"preventScroll\");\n  } else {\n    document.body.classList.remove(\"preventScroll\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}