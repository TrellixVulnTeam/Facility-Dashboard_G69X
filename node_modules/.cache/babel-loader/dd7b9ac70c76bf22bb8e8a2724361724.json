{"ast":null,"code":"import _toConsumableArray from \"/Users/tylertierney/Documents/GitHub/Facility-Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/tylertierney/Documents/GitHub/Facility-Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tylertierney/Documents/GitHub/Facility-Dashboard/src/Dashboard/Dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport PageHeader from \"../PageHeader/PageHeader\";\nimport data from \"../data\";\nimport \"./dashboard.css\";\nimport GridView from \"../GridView/GridView\";\nimport ListView from \"../ListView/ListView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Dashboard = function Dashboard(_ref) {\n  _s();\n\n  var navbarHeight = _ref.navbarHeight;\n\n  var _useState = useState(\"feed\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      viewPreference = _useState2[0],\n      setViewPreference = _useState2[1];\n\n  var _useState3 = useState({\n    key: \"\",\n    direction: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sortConfig = _useState4[0],\n      setSortConfig = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stickyPageHeader = _useState6[0],\n      setStickyPageHeader = _useState6[1];\n\n  var propertiesArray = _toConsumableArray(data);\n\n  var propertiesArray1;\n\n  if (sortConfig !== \"\") {\n    propertiesArray1 = propertiesArray.sort(function (a, b) {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === \"ascending\" ? -1 : 1;\n      }\n\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === \"ascending\" ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }\n\n  var selectedView;\n\n  switch (viewPreference) {\n    case \"feed\":\n      selectedView = /*#__PURE__*/_jsxDEV(GridView, {\n        propertiesArray: propertiesArray1,\n        sortConfig: sortConfig,\n        setSortConfig: setSortConfig,\n        gridSmallOrLarge: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this);\n      break;\n\n    case \"grid\":\n      selectedView = /*#__PURE__*/_jsxDEV(GridView, {\n        propertiesArray: propertiesArray1,\n        sortConfig: sortConfig,\n        setSortConfig: setSortConfig,\n        gridSmallOrLarge: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this);\n      break;\n\n    case \"list\":\n      selectedView = /*#__PURE__*/_jsxDEV(ListView, {\n        propertiesArray: propertiesArray1,\n        sortConfig: sortConfig,\n        setSortConfig: setSortConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this);\n      break;\n\n    default:\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageHeader\",\n      children: /*#__PURE__*/_jsxDEV(PageHeader, {\n        pageTitle: \"Your Dashboard\",\n        viewPreference: viewPreference,\n        setViewPreference: setViewPreference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectedView\",\n      style: {\n        marginTop: \"0.5rem\"\n      },\n      children: selectedView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"91jJkZnOO/418HiBMCgfvg6Zacs=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/tylertierney/Documents/GitHub/Facility-Dashboard/src/Dashboard/Dashboard.js"],"names":["React","useState","useRef","useEffect","PageHeader","data","GridView","ListView","Dashboard","navbarHeight","viewPreference","setViewPreference","key","direction","sortConfig","setSortConfig","stickyPageHeader","setStickyPageHeader","propertiesArray","propertiesArray1","sort","a","b","selectedView","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport PageHeader from \"../PageHeader/PageHeader\";\nimport data from \"../data\";\nimport \"./dashboard.css\";\nimport GridView from \"../GridView/GridView\";\nimport ListView from \"../ListView/ListView\";\n\nconst Dashboard = ({ navbarHeight }) => {\n  const [viewPreference, setViewPreference] = useState(\"feed\");\n  const [sortConfig, setSortConfig] = useState({ key: \"\", direction: \"\" });\n  const [stickyPageHeader, setStickyPageHeader] = useState(false);\n\n  let propertiesArray = [...data];\n  let propertiesArray1;\n\n  if (sortConfig !== \"\") {\n    propertiesArray1 = propertiesArray.sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === \"ascending\" ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === \"ascending\" ? 1 : -1;\n      }\n      return 0;\n    });\n  }\n\n  let selectedView;\n  switch (viewPreference) {\n    case \"feed\":\n      selectedView = (\n        <GridView\n          propertiesArray={propertiesArray1}\n          sortConfig={sortConfig}\n          setSortConfig={setSortConfig}\n          gridSmallOrLarge={true}\n        />\n      );\n      break;\n    case \"grid\":\n      selectedView = (\n        <GridView\n          propertiesArray={propertiesArray1}\n          sortConfig={sortConfig}\n          setSortConfig={setSortConfig}\n          gridSmallOrLarge={false}\n        />\n      );\n      break;\n    case \"list\":\n      selectedView = (\n        <ListView\n          propertiesArray={propertiesArray1}\n          sortConfig={sortConfig}\n          setSortConfig={setSortConfig}\n        />\n      );\n      break;\n    default:\n  }\n\n  return (\n    <>\n      <div className=\"pageHeader\">\n        <PageHeader\n          pageTitle=\"Your Dashboard\"\n          viewPreference={viewPreference}\n          setViewPreference={setViewPreference}\n        />\n      </div>\n      <div className=\"selectedView\" style={{ marginTop: \"0.5rem\" }}>\n        {selectedView}\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}