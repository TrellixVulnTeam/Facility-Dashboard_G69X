{"ast":null,"code":"import _slicedToArray from \"/Users/tylertierney/Documents/GitHub/Facility-Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tylertierney/Documents/GitHub/Facility-Dashboard/src/PropertyCard/PropertyCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Image, Flex, Badge, Text } from \"@chakra-ui/react\";\nimport { WarningIcon } from \"@chakra-ui/icons\";\nimport \"./propertyCard.css\";\nimport PropertyModal from \"../PropertyModal/PropertyModal\";\nimport React, { useState } from \"react\";\nimport { convertDateToString, convertSqftToString, determineBadgeColor, getStreetAddress, preventScrollOnBody } from \"../HelperFunctions\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PropertyCard = function PropertyCard(_ref) {\n  _s();\n\n  var market = _ref.market,\n      address = _ref.address,\n      projectstage = _ref.projectstage,\n      whoscourt = _ref.whoscourt,\n      projectstatusupdate = _ref.projectstatusupdate,\n      strategicdirection = _ref.strategicdirection,\n      size = _ref.size,\n      expdate = _ref.expdate,\n      featuredimg = _ref.featuredimg,\n      gridSmallOrLarge = _ref.gridSmallOrLarge;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalShowing = _useState2[0],\n      setModalShowing = _useState2[1];\n\n  var sizingVariables;\n\n  if (gridSmallOrLarge === true) {\n    sizingVariables = {\n      badgeFontSize: \"sm\",\n      marketFontSize: \"sm\",\n      addressFontSize: \"xl\",\n      boxFontSize: \"md\",\n      boxMaxWidth: \"300px\",\n      actionNeededFontSize: \"sm\",\n      imageBoxSize: \"\",\n      warningIconSize: \"28px\"\n    };\n  } else {\n    sizingVariables = {\n      badgeFontSize: \"0.5rem\",\n      marketFontSize: \"0.55rem\",\n      addressFontSize: \"sm\",\n      boxFontSize: \"xs\",\n      boxMaxWidth: \"175px\",\n      actionNeededFontSize: \"xs\",\n      imageBoxSize: \"150px\",\n      warningIconSize: \"20px\"\n    };\n  }\n\n  var actionNeeded, notificationBadge;\n\n  if (whoscourt === \"Avocat Group\") {\n    actionNeeded = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else if (whoscourt === \"Inactive\") {\n    actionNeeded = /*#__PURE__*/_jsxDEV(Flex, {\n      mt: 2,\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        ml: 1,\n        fontSize: sizingVariables.actionNeededFontSize,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this), \" \", projectstatusupdate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this);\n  } else {\n    actionNeeded = /*#__PURE__*/_jsxDEV(Flex, {\n      mt: 2,\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        ml: 1,\n        fontSize: sizingVariables.actionNeededFontSize,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Action Required:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this), \" \", projectstatusupdate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this);\n    notificationBadge = /*#__PURE__*/_jsxDEV(WarningIcon, {\n      color: \"red.400\",\n      boxSize: sizingVariables.warningIconSize,\n      className: \"warningIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this);\n  }\n\n  var showModal = function showModal() {\n    setModalShowing(true);\n    preventScrollOnBody(\"prevent\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"propertyCard\",\n    p: \"5\",\n    maxW: sizingVariables.boxMaxWidth,\n    borderWidth: \"1px\",\n    mb: \"30px\",\n    onClick: function onClick() {\n      return showModal();\n    },\n    fontSize: sizingVariables.boxFontSize,\n    children: [isModalShowing ? /*#__PURE__*/_jsxDEV(PropertyModal, {\n      isModalShowing: isModalShowing,\n      setModalShowing: setModalShowing,\n      market: market,\n      address: address,\n      projectstage: projectstage,\n      whoscourt: whoscourt,\n      projectstatusupdate: projectstatusupdate,\n      strategicdirection: strategicdirection,\n      size: size,\n      expdate: expdate,\n      featuredimg: featuredimg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), notificationBadge, /*#__PURE__*/_jsxDEV(Image, {\n      borderRadius: \"md\",\n      src: featuredimg,\n      objectFit: \"cover\",\n      boxSize: sizingVariables.imageBoxSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"baseline\",\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        fontSize: sizingVariables.badgeFontSize,\n        colorScheme: determineBadgeColor(projectstage),\n        children: projectstage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Text, {\n        ml: 2,\n        textTransform: \"uppercase\",\n        fontSize: sizingVariables.marketFontSize,\n        fontWeight: \"bold\",\n        color: \"pink.800\",\n        children: market\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Text, {\n      mt: 2,\n      fontSize: sizingVariables.addressFontSize,\n      fontWeight: \"semibold\",\n      lineHeight: \"short\",\n      className: \"propertyCardAddress\",\n      children: getStreetAddress(address)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Text, {\n      mt: 2,\n      children: convertSqftToString(size) + \" SQFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      mt: 2,\n      children: expdate ? \"Exp Date: \" + convertDateToString(expdate) : expdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, _this), actionNeeded]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PropertyCard, \"OapOVsDtfLPONZIXzQDIr3GGnDg=\");\n\n_c = PropertyCard;\nexport default PropertyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertyCard\");","map":{"version":3,"sources":["/Users/tylertierney/Documents/GitHub/Facility-Dashboard/src/PropertyCard/PropertyCard.js"],"names":["Box","Image","Flex","Badge","Text","WarningIcon","PropertyModal","React","useState","convertDateToString","convertSqftToString","determineBadgeColor","getStreetAddress","preventScrollOnBody","PropertyCard","market","address","projectstage","whoscourt","projectstatusupdate","strategicdirection","size","expdate","featuredimg","gridSmallOrLarge","isModalShowing","setModalShowing","sizingVariables","badgeFontSize","marketFontSize","addressFontSize","boxFontSize","boxMaxWidth","actionNeededFontSize","imageBoxSize","warningIconSize","actionNeeded","notificationBadge","showModal"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,oBAAP;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,mBALF,QAMO,oBANP;;;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAWf;AAAA;;AAAA,MAVJC,MAUI,QAVJA,MAUI;AAAA,MATJC,OASI,QATJA,OASI;AAAA,MARJC,YAQI,QARJA,YAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,mBAMI,QANJA,mBAMI;AAAA,MALJC,kBAKI,QALJA,kBAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,gBACI,QADJA,gBACI;;AACJ,kBAA0ChB,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOiB,cAAP;AAAA,MAAuBC,eAAvB;;AAEA,MAAIC,eAAJ;;AACA,MAAIH,gBAAgB,KAAK,IAAzB,EAA+B;AAC7BG,IAAAA,eAAe,GAAG;AAChBC,MAAAA,aAAa,EAAE,IADC;AAEhBC,MAAAA,cAAc,EAAE,IAFA;AAGhBC,MAAAA,eAAe,EAAE,IAHD;AAIhBC,MAAAA,WAAW,EAAE,IAJG;AAKhBC,MAAAA,WAAW,EAAE,OALG;AAMhBC,MAAAA,oBAAoB,EAAE,IANN;AAOhBC,MAAAA,YAAY,EAAE,EAPE;AAQhBC,MAAAA,eAAe,EAAE;AARD,KAAlB;AAUD,GAXD,MAWO;AACLR,IAAAA,eAAe,GAAG;AAChBC,MAAAA,aAAa,EAAE,QADC;AAEhBC,MAAAA,cAAc,EAAE,SAFA;AAGhBC,MAAAA,eAAe,EAAE,IAHD;AAIhBC,MAAAA,WAAW,EAAE,IAJG;AAKhBC,MAAAA,WAAW,EAAE,OALG;AAMhBC,MAAAA,oBAAoB,EAAE,IANN;AAOhBC,MAAAA,YAAY,EAAE,OAPE;AAQhBC,MAAAA,eAAe,EAAE;AARD,KAAlB;AAUD;;AAED,MAAIC,YAAJ,EAAkBC,iBAAlB;;AACA,MAAInB,SAAS,KAAK,cAAlB,EAAkC;AAChCkB,IAAAA,YAAY,gBAAG,qCAAf;AACD,GAFD,MAEO,IAAIlB,SAAS,KAAK,UAAlB,EAA8B;AACnCkB,IAAAA,YAAY,gBACV,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,KAAK,EAAC,QAAnB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,QAAQ,EAAET,eAAe,CAACM,oBAAvC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OACgBd,mBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF;AAOD,GARM,MAQA;AACLiB,IAAAA,YAAY,gBACV,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,KAAK,EAAC,QAAnB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,QAAQ,EAAET,eAAe,CAACM,oBAAvC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OAC2Bd,mBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF;AAQAkB,IAAAA,iBAAiB,gBACf,QAAC,WAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAEV,eAAe,CAACQ,eAF3B;AAGE,MAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,aADF;AAOD;;AAED,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBZ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAb,IAAAA,mBAAmB,CAAC,SAAD,CAAnB;AACD,GAHD;;AAKA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,CAAC,EAAC,GAFJ;AAGE,IAAA,IAAI,EAAEc,eAAe,CAACK,WAHxB;AAIE,IAAA,WAAW,EAAC,KAJd;AAKE,IAAA,EAAE,EAAC,MALL;AAME,IAAA,OAAO,EAAE;AAAA,aAAMM,SAAS,EAAf;AAAA,KANX;AAOE,IAAA,QAAQ,EAAEX,eAAe,CAACI,WAP5B;AAAA,eASGN,cAAc,gBACb,QAAC,aAAD;AACE,MAAA,cAAc,EAAEA,cADlB;AAEE,MAAA,eAAe,EAAEC,eAFnB;AAGE,MAAA,MAAM,EAAEX,MAHV;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,YAAY,EAAEC,YALhB;AAME,MAAA,SAAS,EAAEC,SANb;AAOE,MAAA,mBAAmB,EAAEC,mBAPvB;AAQE,MAAA,kBAAkB,EAAEC,kBARtB;AASE,MAAA,IAAI,EAAEC,IATR;AAUE,MAAA,OAAO,EAAEC,OAVX;AAWE,MAAA,WAAW,EAAEC;AAXf;AAAA;AAAA;AAAA;AAAA,aADa,gBAeb,qCAxBJ,EA0BGc,iBA1BH,eA2BE,QAAC,KAAD;AACE,MAAA,YAAY,EAAC,IADf;AAEE,MAAA,GAAG,EAAEd,WAFP;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,OAAO,EAAEI,eAAe,CAACO;AAJ3B;AAAA;AAAA;AAAA;AAAA,aA3BF,eAiCE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAE,CAA3B;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,QAAQ,EAAEP,eAAe,CAACC,aAD5B;AAEE,QAAA,WAAW,EAAEjB,mBAAmB,CAACM,YAAD,CAFlC;AAAA,kBAIGA;AAJH;AAAA;AAAA;AAAA;AAAA,eADF,eAOE,QAAC,IAAD;AACE,QAAA,EAAE,EAAE,CADN;AAEE,QAAA,aAAa,EAAC,WAFhB;AAGE,QAAA,QAAQ,EAAEU,eAAe,CAACE,cAH5B;AAIE,QAAA,UAAU,EAAC,MAJb;AAKE,QAAA,KAAK,EAAC,UALR;AAAA,kBAOGd;AAPH;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA,aAjCF,eAkDE,QAAC,IAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,QAAQ,EAAEY,eAAe,CAACG,eAF5B;AAGE,MAAA,UAAU,EAAC,UAHb;AAIE,MAAA,UAAU,EAAC,OAJb;AAKE,MAAA,SAAS,EAAC,qBALZ;AAAA,gBAOGlB,gBAAgB,CAACI,OAAD;AAPnB;AAAA;AAAA;AAAA;AAAA,aAlDF,eA2DE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA,gBAAcN,mBAAmB,CAACW,IAAD,CAAnB,GAA4B;AAA1C;AAAA;AAAA;AAAA;AAAA,aA3DF,eA4DE;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA,gBACGC,OAAO,GAAG,eAAeb,mBAAmB,CAACa,OAAD,CAArC,GAAiDA;AAD3D;AAAA;AAAA;AAAA;AAAA,aA5DF,EA+DGc,YA/DH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmED,CA5ID;;GAAMtB,Y;;KAAAA,Y;AA8IN,eAAeA,YAAf","sourcesContent":["import { Box, Image, Flex, Badge, Text } from \"@chakra-ui/react\";\nimport { WarningIcon } from \"@chakra-ui/icons\";\nimport \"./propertyCard.css\";\nimport PropertyModal from \"../PropertyModal/PropertyModal\";\nimport React, { useState } from \"react\";\nimport {\n  convertDateToString,\n  convertSqftToString,\n  determineBadgeColor,\n  getStreetAddress,\n  preventScrollOnBody,\n} from \"../HelperFunctions\";\n\nconst PropertyCard = ({\n  market,\n  address,\n  projectstage,\n  whoscourt,\n  projectstatusupdate,\n  strategicdirection,\n  size,\n  expdate,\n  featuredimg,\n  gridSmallOrLarge,\n}) => {\n  const [isModalShowing, setModalShowing] = useState(false);\n\n  let sizingVariables;\n  if (gridSmallOrLarge === true) {\n    sizingVariables = {\n      badgeFontSize: \"sm\",\n      marketFontSize: \"sm\",\n      addressFontSize: \"xl\",\n      boxFontSize: \"md\",\n      boxMaxWidth: \"300px\",\n      actionNeededFontSize: \"sm\",\n      imageBoxSize: \"\",\n      warningIconSize: \"28px\",\n    };\n  } else {\n    sizingVariables = {\n      badgeFontSize: \"0.5rem\",\n      marketFontSize: \"0.55rem\",\n      addressFontSize: \"sm\",\n      boxFontSize: \"xs\",\n      boxMaxWidth: \"175px\",\n      actionNeededFontSize: \"xs\",\n      imageBoxSize: \"150px\",\n      warningIconSize: \"20px\",\n    };\n  }\n\n  let actionNeeded, notificationBadge;\n  if (whoscourt === \"Avocat Group\") {\n    actionNeeded = <></>;\n  } else if (whoscourt === \"Inactive\") {\n    actionNeeded = (\n      <Flex mt={2} align=\"center\">\n        <Text ml={1} fontSize={sizingVariables.actionNeededFontSize}>\n          <b>Note:</b> {projectstatusupdate}\n        </Text>\n      </Flex>\n    );\n  } else {\n    actionNeeded = (\n      <Flex mt={2} align=\"center\">\n        <Text ml={1} fontSize={sizingVariables.actionNeededFontSize}>\n          <b>Action Required:</b> {projectstatusupdate}\n        </Text>\n      </Flex>\n    );\n\n    notificationBadge = (\n      <WarningIcon\n        color=\"red.400\"\n        boxSize={sizingVariables.warningIconSize}\n        className=\"warningIcon\"\n      />\n    );\n  }\n\n  const showModal = () => {\n    setModalShowing(true);\n    preventScrollOnBody(\"prevent\");\n  };\n\n  return (\n    <Box\n      className=\"propertyCard\"\n      p=\"5\"\n      maxW={sizingVariables.boxMaxWidth}\n      borderWidth=\"1px\"\n      mb=\"30px\"\n      onClick={() => showModal()}\n      fontSize={sizingVariables.boxFontSize}\n    >\n      {isModalShowing ? (\n        <PropertyModal\n          isModalShowing={isModalShowing}\n          setModalShowing={setModalShowing}\n          market={market}\n          address={address}\n          projectstage={projectstage}\n          whoscourt={whoscourt}\n          projectstatusupdate={projectstatusupdate}\n          strategicdirection={strategicdirection}\n          size={size}\n          expdate={expdate}\n          featuredimg={featuredimg}\n        />\n      ) : (\n        <></>\n      )}\n      {notificationBadge}\n      <Image\n        borderRadius=\"md\"\n        src={featuredimg}\n        objectFit=\"cover\"\n        boxSize={sizingVariables.imageBoxSize}\n      />\n      <Flex align=\"baseline\" mt={2}>\n        <Badge\n          fontSize={sizingVariables.badgeFontSize}\n          colorScheme={determineBadgeColor(projectstage)}\n        >\n          {projectstage}\n        </Badge>\n        <Text\n          ml={2}\n          textTransform=\"uppercase\"\n          fontSize={sizingVariables.marketFontSize}\n          fontWeight=\"bold\"\n          color=\"pink.800\"\n        >\n          {market}\n        </Text>\n      </Flex>\n      <Text\n        mt={2}\n        fontSize={sizingVariables.addressFontSize}\n        fontWeight=\"semibold\"\n        lineHeight=\"short\"\n        className=\"propertyCardAddress\"\n      >\n        {getStreetAddress(address)}\n      </Text>\n      <Text mt={2}>{convertSqftToString(size) + \" SQFT\"}</Text>\n      <span mt={2}>\n        {expdate ? \"Exp Date: \" + convertDateToString(expdate) : expdate}\n      </span>\n      {actionNeeded}\n    </Box>\n  );\n};\n\nexport default PropertyCard;\n"]},"metadata":{},"sourceType":"module"}